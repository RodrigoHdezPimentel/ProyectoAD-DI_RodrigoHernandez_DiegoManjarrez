DROP DATABASE IF EXISTS FORO;
CREATE DATABASE FORO;
USE FORO;
DROP TABLE IF EXISTS Usuarios;
DROP TABLE IF EXISTS Likes;
DROP TABLE IF EXISTS Publicaciones;
DROP TABLE IF EXISTS Temas;
DROP TABLE IF EXISTS Chats;


CREATE TABLE Usuarios(
	idUsuario INTEGER PRIMARY KEY AUTO_INCREMENT,
    anioNacimiento INTEGER,
	Us_Nombre VARCHAR(20),
    Us_Genero VARCHAR(20),
    Us_Descripcion VARCHAR(200),
    Us_Mail VARCHAR(20),
    Us_Contrasena VARCHAR(20)    
);


CREATE TABLE Chat(
	idChat INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
	idUsuarioDestino INTEGER NOT NULL,
    idUsuarioOrigen INTEGER NOT NULL,
    fecha DATE,
    contenido VARCHAR(100),
	FOREIGN KEY (idUsuarioDestino)
		REFERENCES Usuarios (idUsuario)
		ON UPDATE CASCADE
    	ON DELETE CASCADE,
	FOREIGN KEY (idUsuarioOrigen)
		REFERENCES Usuarios (idUsuario)
		ON UPDATE CASCADE
    	ON DELETE CASCADE
);


CREATE TABLE Temas(
	idTema INTEGER PRIMARY KEY AUTO_INCREMENT,
    Titulo VARCHAR(35),
    edadMinima INTEGER
);



CREATE TABLE Publicaciones(
	idPublicacion INTEGER PRIMARY KEY AUTO_INCREMENT,
    idUsuario INTEGER NOT NULL,
    idTema INTEGER NOT NULL,
    idPubliRefer INTEGER,
    fecha DATE,
    numLikes INTEGER,
    contenido VARCHAR(300),
	FOREIGN KEY (idPubliRefer)
		REFERENCES Publicaciones (idPublicacion)
		ON UPDATE CASCADE
    	ON DELETE CASCADE,
	FOREIGN KEY (idTema)
		REFERENCES Temas (idTema)
		ON UPDATE CASCADE
    	ON DELETE CASCADE,
	FOREIGN KEY (idUsuario)
		REFERENCES Usuarios (idUsuario)
		ON UPDATE CASCADE
    	ON DELETE CASCADE
);


CREATE TABLE Likes(
	idLike INTEGER PRIMARY KEY AUTO_INCREMENT,
	idPublicacion INTEGER NOT NULL,
	idUsuario INTEGER NOT NULL,
	FOREIGN KEY (idPublicacion)
		REFERENCES Publicaciones (idPublicacion)
		ON UPDATE CASCADE
		ON DELETE CASCADE,
	FOREIGN KEY (idUsuario)
		REFERENCES Usuarios (idUsuario)
		ON UPDATE CASCADE
    	ON DELETE CASCADE
);


CREATE TABLE Usuario_Tema(
    idUsuario INTEGER NOT NULL,
	idTema INTEGER NOT NULL,
	FOREIGN KEY (idTema)
		REFERENCES Temas (idTema)
		ON UPDATE CASCADE
    	ON DELETE CASCADE,
	FOREIGN KEY (idUsuario)
		REFERENCES Usuarios (idUsuario)
		ON UPDATE CASCADE
    	ON DELETE CASCADE
);